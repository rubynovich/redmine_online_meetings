%div
  %iframe{:height => "484", :src => Setting[:plugin_redmine_online_meetings][:videoserver_nginx_proxy] == "1" ? "/videoserver/#{26000+@object.server_id}/vncrun.html?host=#{Setting[:plugin_redmine_online_meetings][:videoserver_host]}&port=#{26000+@object.server_id}&password=12345678" : "https://#{Setting[:plugin_redmine_online_meetings][:videoserver_host]}:#{26000+@object.server_id}/vncrun.html?host=#{Setting[:plugin_redmine_online_meetings][:videoserver_host]}&port=#{26000+@object.server_id}&password=12345678", :width => "640"}
%div
  = l(:label_for_link_to_no_view)
  = link_to l(:link_to_no_view), Setting[:plugin_redmine_online_meetings][:videoserver_nginx_proxy] == "1" ? "/videoserver/#{26000+@object.server_id}/vncrun.html?host=#{Setting[:plugin_redmine_online_meetings][:videoserver_host]}&port=#{26000+@object.server_id}&password=12345678&go_back=true" : "https://#{Setting[:plugin_redmine_online_meetings][:videoserver_host]}:#{26000+@object.server_id}/vncrun.html?host=#{Setting[:plugin_redmine_online_meetings][:videoserver_host]}&port=#{26000+@object.server_id}&password=12345678&go_back=true"
%div
  = link_to("&#9632; #{l(:link_to_stop_record_hangouts)} <span id=\"timer\"></span>".html_safe, {controller: 'meeting_agendas', action: 'stop_record', id: @object}, style: 'display: block; width: 170px; height: 20px; font-weight: bold; font-size: 14px; background: #F00; border-radius: 4px; padding: 10px; color: #FFF;')
:css
  .blink{
    display: inline-block;
    text-align: center;
    width: 10px;
  }
:javascript
  var blink_state = false;
  var fix_time = #{Time.now.to_i*1000} - new Date().getTime();
  function startTime(ts){
    var tm;
    if (ts){
      tm = new Date(new Date().getTime() - fix_time - ts*1000);
    } else {
      tm = new Date();
    }
    var h=tm.getUTCHours();
    var m=tm.getUTCMinutes();
    var s=tm.getUTCSeconds();
    m=checkTime(m);
    s=checkTime(s);
    document.getElementById('timer').innerHTML=h+'<span class="blink">:</span>'+m+'<span class="blink">:</span>'+s;
    if (blink_state){
      blink_state = false
      $('.blink').css('visibility', 'hidden');
    } else {
      blink_state = true
      $('.blink').css('visibility', 'visible');
    }
    setTimeout(function(){
      startTime(ts);
    },500);
  }

  function checkTime(i){
    if (i<10)
      {
      i="0" + i;
      }
    return i;
  }

  var default_continue_time = #{Setting[:plugin_redmine_online_meetings][:continue_time]}
  var default_timeout = #{Setting[:plugin_redmine_online_meetings][:timeout]}
  var cont_to = function(minutes, stop_time) {
    setTimeout(function(){
      var current_time = parseInt(new Date().getTime() / 1000);
      var add_minutes = null;
      var cont_to = false
      if ((current_time+#{((Setting[:plugin_redmine_online_meetings][:continue_time_notify] || 0).to_i) * 60 }) < stop_time){
        cont_to = true
      } else {
        add_minutes = false;
        add_minutes = parseInt(prompt('#{l(:prompt_continue_time)}', timeout));
      }
      if (add_minutes){
        $.post('#{url_for( {controller: 'meeting_agendas', action: 'continue_record', id: @object.try(:id)})}', { stop_time: current_time+add_minutes*60 },function( data ){
          cont_to(1, data.stop_time);
        },"json");
      } else {
        if (cont_to){
          $.post('#{url_for( {controller: 'meeting_agendas', action: 'continue_record', id: @object.try(:id)})}', { },function( data ){
            cont_to(1, data.stop_time);
          },"json");
        }
      }
      var timeout2 = (stop_time - parseInt(new Date().getTime() / 1000)) * 1000;
      if (timeout2 < 1){ timeout2 = 1; }
      setTimeout(function(){
        $.get('#{url_for( {controller: 'meeting_agendas', action: 'stop_record', id: @object.try(:id)})}', function(){
          alert('#{l(:notify_stop_recording)}');
        })
      }, timeout2 );

    }, minutes*60000)
  }

  var stop_time = #{@object.end_time_utc.to_i};
    startTime(#{@video['created_at'].to_time.utc.to_i});
  cont_to(1, stop_time);
  console.log('starting record');

